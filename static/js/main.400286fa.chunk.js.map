{"version":3,"sources":["../../src/context/index.js","../../src/components/control-header/index.js","../../src/components/control-modal/index.js","../../src/components/node-wrapper/index.js","../../src/components/base-node/index.js","../../src/components/picker-node/index.js","../../src/components/product-node/index.js","../../src/components/collector-node/index.js","../../src/style/index.js","../../src/index.js","App.js","index.js"],"names":["EditorContext","nodes","links","withEditor","withContext","props","React","controlOptions","name","menu","label","type","x","className","styles","onClick","y","e","setAnchor","setSelected","keepMounted","anchorEl","open","selectedMenu","onClose","fullWidth","color","variant","nodeMenu","icon","action","node","n","Object","a","position","style","background","onTap","component","src","modal","onChange","value","rows","multiline","key","placeholder","selectionNodes","button","console","img","openMenu","parseFloat","mapStatus","_links","linkStatus","b","lix","borderRadius","i","uuid","require","onLoad","reactFlowInst","updateNode","id","node_func","ix","_setNodes","_setLinks","addLink","parent","target","link","source","addNode","data","onNodeDrag","event","_node","editor","exploring","exploreNode","node_id","setExploring","nodeTypes","joinNode","user","addChild","parent_id","parent_node","newPos","elements","baseNode","productNode","pickerNode","collectorNode","onNodeDragStart","onNodeDragStop","onElementsRemove","elementsToRemove","_nodes","onConnect","params","snapToGrid","snapGrid","nodeStrokeColor","nodeColor","nodeBorderRadius","gap","selected","X","App","useState","setNodes","setLinks","modalBody","NodeType","onNodeChange","onLinkChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.400286fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withContext } from 'with-context';\r\n\r\nexport const EditorContext = React.createContext({\r\n  nodes: [],\r\n  links: []\r\n})\r\n\r\nexport const withEditor = withContext(EditorContext, 'editor')\r\n","import React from 'react';\r\nimport {\r\n  Menu,\r\n  MenuItem\r\n} from '@material-ui/core';\r\n\r\nimport { withEditor } from '../../context';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction ControlHeader(props){\r\n  const [ anchorEl, setAnchor ] = React.useState(null)\r\n  const [selectedMenu, setSelected ] = React.useState(null)\r\n\r\n  const controlOptions = [ \r\n    {\r\n      name: \"View\",\r\n      menu: (\r\n        <div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: \"Select\",\r\n      menu: (\r\n        <div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: \"Add\",\r\n      menu: [{\r\n        label: \"Base\",\r\n        type: \"baseNode\"\r\n      }, {\r\n        label: \"Product\",\r\n        type: \"productNode\"\r\n      }, {\r\n        label: \"Picker\",\r\n        type: \"pickerNode\"\r\n      }, {\r\n        label: \"Collector\",\r\n        type: \"collectorNode\"\r\n      }].concat((props.editor.nodeTypes || []).map((x) => ({label: x.type, type: x.type}))).map((x) => (\r\n        <MenuItem className={styles.dropdownMenuItem} onClick={() => props.editor.addNode(x.type, {x: 300, y: 300})}>{x.label}</MenuItem>\r\n      ))\r\n    },\r\n    {\r\n      name: \"Object\",\r\n      menu: (\r\n        <div>\r\n        </div>\r\n      )}\r\n  ]\r\n\r\n  return (\r\n    <div className={styles.controlHeader}>\r\n      {controlOptions.map((x) => (\r\n        <div onClick={(e) => {\r\n          setAnchor(e.currentTarget)\r\n          setSelected(x)\r\n        }}>\r\n          {x.name}\r\n\r\n        </div>\r\n      ))}\r\n\r\n        <Menu\r\n          className={styles.dropdownMenu}\r\n            keepMounted\r\n            anchorEl={anchorEl}\r\n            open={selectedMenu != null} \r\n            onClose={() => {\r\n              setSelected(null)\r\n            }}>\r\n            {selectedMenu && selectedMenu.menu}\r\n          </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEditor(ControlHeader)\r\n","import React from 'react';\r\n\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport { withEditor } from '../../context';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction ControlModal(props){\r\n\r\n  const controlMenu = [\r\n    {\r\n      label: \"Join\",\r\n      action: () => {\r\n        props.editor.joinNode(props.selected.id)\r\n      }\r\n    },\r\n    {\r\n      label: \"Due Date\",\r\n      action: () => {\r\n        \r\n      }\r\n    },\r\n    {\r\n      label: \"Checklist\",\r\n      action: () => {\r\n      }\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Dialog \r\n      fullWidth \r\n      open={props.open} \r\n      onClose={props.onClose}>\r\n      <DialogTitle>{props.selected && props.selected.data.label}</DialogTitle>\r\n      <DialogContent>\r\n        <div className={styles.controlModal}>\r\n              {props.children(props.selected)} \r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n        <Button \r\n          color=\"primary\"\r\n          variant=\"contained\">Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default withEditor(ControlModal)\r\n","import React from 'react';\r\n\r\nimport {\r\n  Add,\r\n  Done,\r\n  Clear,\r\n  Create,\r\n  Visibility\r\n} from '@material-ui/icons';\r\n\r\nimport Tappable from 'react-tappable';\r\n\r\nimport { withEditor } from '../../context';\r\nimport { Handle } from '@thetechcompany/react-flow-renderer';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nfunction NodeWrapper(props){\r\n\r\n  const nodeMenu = [\r\n    {\r\n      icon: <Add />,\r\n      action: () => {\r\n        var node = props.editor.addNode('baseNode', {\r\n          x: props.xPos,\r\n          y: props.yPos + 100\r\n        })\r\n        let link = props.editor.addLink(props.id, node.id)\r\n      }\r\n    },\r\n    {\r\n      icon: (props.data && props.data.status != 'COMPLETE') ? <Done /> : <Clear />,\r\n      action: () => {\r\n        props.editor.updateNode(props.id, (node) => {\r\n          let n = Object.assign({}, node)\r\n          n.data.status = (props.data.status != 'COMPLETE'? 'COMPLETE'  : \"UNFINISHED\");\r\n          return n;\r\n        })\r\n      }\r\n    },\r\n    {\r\n      icon: <Create />,\r\n      action: () => {\r\n        props.editor.exploreNode(props.id)\r\n      }\r\n    }\r\n  ]\r\n\r\n  let node = props.editor.nodes.filter((a) => a.id == props.id)\r\n\r\n  return (\r\n    <div className={styles.nodeWrapper}>\r\n      <Handle \r\n        type=\"target\"\r\n        position=\"top\"\r\n        style={{background: \"#555\"}} />\r\n      \r\n        <div className={styles.nodeWrapperInner}>\r\n\r\n          {props.children}\r\n\r\n          {props.selected && (\r\n            <div className={styles.nodeMenu}>\r\n              {nodeMenu.map((x) => (\r\n                <Tappable onTap={x.action} component={'div'}>{x.icon}</Tappable>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={styles.nodeTeam}>\r\n            {node && node.length > 0 && node[0].members && node[0].members.map((x) => (\r\n            <img src={`https://avatars.dicebear.com/api/avataaars/${x}.svg`} />\r\n          ))}\r\n        </div>\r\n      <Handle \r\n        type=\"source\"\r\n        position=\"bottom\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEditor(NodeWrapper)\r\n","import React from 'react';\r\n\r\nimport {\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nimport { \r\n  Clear,\r\n  Add,\r\n  Done,\r\n  Visibility\r\n} from '@material-ui/icons';\r\n\r\nimport { withEditor } from '../../context';\r\nimport NodeWrapper from '../node-wrapper';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nexport const type = \"baseNode\"\r\n\r\nexport const modal = withEditor((props) => {\r\n  return (\r\n      <TextField \r\n        fullWidth\r\n        onChange={(e) => {\r\n          props.editor.updateNode(props.node.id, (node) => {\r\n            node.data.label = e.target.value;\r\n            return node;\r\n          })\r\n        }}\r\n        value={props.node.data.label}\r\n        label=\"Description\" \r\n        rows={6} \r\n        multiline />\r\n  );\r\n})\r\n\r\n\r\nfunction BaseNode(props){\r\n  const [ menuOpen, openMenu ] = React.useState(false)\r\n\r\n  let node = (props.editor && props.editor.nodes || []).filter((a) => a.id == props.id)\r\n  return (\r\n    <NodeWrapper {...props}>\r\n      <textarea\r\n        key={props.id + 'textarea'}\r\n        rows={4}\r\n        placeholder=\"Node description\"\r\n        value={node.length > 0 ? node[0].data.label : \"\"}\r\n        onChange={(e) => {\r\n          //update node value in context\r\n          props.editor.updateNode(props.id, (node) => {\r\n            node.data.label = e.target.value;\r\n            return node;\r\n          })\r\n        }} />\r\n      <div className={styles['base-node__info']}>\r\n        {/* Render assigned people */}\r\n      </div>\r\n    </NodeWrapper>\r\n  );\r\n}\r\n\r\nexport const node = withEditor(BaseNode)\r\n","import React from 'react';\r\n\r\nimport {\r\n  TextField,\r\n  List,\r\n  ListItem\r\n} from '@material-ui/core';\r\n\r\nimport { \r\n  Clear,\r\n  Add,\r\n  Done,\r\n  Visibility\r\n} from '@material-ui/icons';\r\n\r\nimport NodeWrapper from '../node-wrapper';\r\n\r\nimport { withEditor } from '../../context';\r\nimport styles from './styles.module.css';\r\n\r\nexport const type = \"pickerNode\"\r\n\r\nexport const modal = withEditor((props) => {\r\n  let selectionNodes = props.editor.links.filter((a) => a.source == props.node.id).map((x) => {\r\n    return props.editor.nodes.filter((a) => a.id == x.target)[0]\r\n  })\r\n\r\n  return (\r\n    <List>\r\n        {selectionNodes.map((x) => \r\n          x.type == 'productNode' && (\r\n            <ListItem button onClick={() => {\r\n              if(props.node && props.node.id){\r\n                console.log(props.node)\r\n                  props.editor.updateNode(props.node.id, (node) => {\r\n                    node.data.picked = x;\r\n                    return node;\r\n                \r\n                  })\r\n              }\r\n            }}>{props.node && props.node.data && props.node.data.picked && props.node.data.picked.id == x.id && <Done />}{x.data.label}</ListItem>\r\n        ))}\r\n    </List>\r\n        \r\n  );\r\n})\r\n\r\n\r\nfunction PickerNode(props){\r\n  const [ menuOpen, openMenu ] = React.useState(false)\r\n\r\n  console.log(props)\r\n  let node = (props.editor && props.editor.nodes || []).filter((a) => a.id == props.id)[0]\r\n\r\n  return (\r\n\r\n    <NodeWrapper {...props}>\r\n      <div className={styles['base-node']}>      \r\n          {node && node.data.picked ? [\r\n            <img src={node && node.data && node.data.picked.data.img} />,\r\n            <div className={styles.productInfo}>\r\n              <div >\r\n                {node && node.data && node.data.picked.data.label}\r\n              </div>\r\n              <div>\r\n                ${node && node.data && node.data.picked.data.price}\r\n              </div>\r\n            </div>\r\n          ] : (\r\n            <div>Awaiting selection</div>\r\n          )}\r\n      </div>\r\n    </NodeWrapper>\r\n  );\r\n}\r\n\r\nexport const node = withEditor(PickerNode)\r\n","import React from 'react';\r\n\r\nimport {\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nimport { \r\n  Clear,\r\n  Add,\r\n  Done,\r\n  Visibility\r\n} from '@material-ui/icons';\r\n\r\nimport NodeWrapper from '../node-wrapper';\r\nimport { withEditor } from '../../context';\r\nimport styles from './styles.module.css';\r\n\r\nexport const type = \"productNode\"\r\n\r\nexport const modal = withEditor((props) => {\r\n  return [\r\n    <TextField\r\n      onChange={(e) => {\r\n        props.editor.updateNode(props.node.id, (node) => {\r\n          node.data.label = e.target.value;\r\n          return node;\r\n        })\r\n      }}\r\n      value={props.node.data.label}\r\n        fullWidth\r\n        label=\"Product Name\"  />,\r\n    <TextField\r\n      onChange={(e) => {\r\n        props.editor.updateNode(props.node.id, (node) => {\r\n          node.data.price = e.target.value;\r\n          return node;\r\n        })  \r\n      }}\r\n      value={props.node.data.price}\r\n        fullWidth\r\n        label=\"Product Price\" />,\r\n    <TextField\r\n      onChange={(e) => {\r\n        props.editor.updateNode(props.node.id, (node) => {\r\n          node.data.img = e.target.value\r\n          return node;\r\n        })\r\n      }}\r\n      value={props.node.data.img}\r\n        fullWidth\r\n        label=\"Product Image\" />\r\n  ];\r\n})\r\n\r\n\r\nfunction ProductNode(props){\r\n  const [ menuOpen, openMenu ] = React.useState(false)\r\n\r\n  let node = (props.editor && props.editor.nodes || []).filter((a) => a.id == props.id)[0]\r\n\r\n  return (\r\n    <NodeWrapper {...props}>\r\n      <div onClick={() => openMenu(!menuOpen)} className={styles['base-node']} > \r\n        <img src={node && node.data && node.data.img} />\r\n        <div className={styles.productInfo}>\r\n          <div >\r\n            {node && node.data && node.data.label}\r\n          </div>\r\n          <div>\r\n            ${node && node.data && node.data.price}\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </NodeWrapper>\r\n  );\r\n}\r\n\r\nexport const node = withEditor(ProductNode)\r\n","import React from 'react';\r\n\r\nimport {\r\n  TextField,\r\n  List,\r\n  ListItem\r\n} from '@material-ui/core';\r\n\r\nimport { \r\n  Clear,\r\n  Add,\r\n  Done,\r\n  Visibility\r\n} from '@material-ui/icons';\r\n\r\nimport { withEditor } from '../../context';\r\nimport NodeWrapper from '../node-wrapper';\r\nimport styles from './styles.module.css';\r\n\r\nexport const type = \"collectorNode\"\r\n\r\nexport const modal = withEditor((props) => {\r\n  let selectionNodes = props.editor.links.filter((a) => a.source == props.node.id).map((x) => {\r\n    return props.editor.nodes.filter((a) => a.id == x.target)[0]\r\n  })\r\n\r\n  return (\r\n    <List>\r\n        {selectionNodes.map((x) => {\r\n          console.log(x)\r\n          return (\r\n            <ListItem button onClick={() => {\r\n              /*              if(props.node && props.node.id){\r\n                console.log(props.node)\r\n                  props.editor.updateNode(props.node.id, (node) => {\r\n                    node.data.picked = x;\r\n                    return node;\r\n                \r\n                  })\r\n              }*/\r\n            }}>\r\n              {x.data.picked != null ? x.data.picked.data.label : x.data.label}\r\n              {x.data.picked != null ? x.data.picked.data.price : ''}\r\n             </ListItem>\r\n          )\r\n        })}\r\n      <ListItem>\r\n        ${((selectionNodes).map((x) => x.data && x.data.picked ?  x.data.picked.data.price : 0).concat([0])).reduce((a,b) => parseFloat(a)+parseFloat(b))}\r\n      </ListItem>\r\n    </List>\r\n        \r\n  );\r\n})\r\n\r\n\r\nfunction CollectorNode(props){\r\n  const [ menuOpen, openMenu ] = React.useState(false)\r\n\r\n\r\n  let node = (props.editor && props.editor.nodes || []).filter((a) => a.id == props.id)[0]\r\n\r\n  return (\r\n    <NodeWrapper {...props}> \r\n          {node && node.data.picked ? [\r\n            <img src={node && node.data && node.data.picked.data.img} />,\r\n            <div className={styles.productInfo}>\r\n              <div >\r\n                {node && node.data && node.data.picked.data.label}\r\n              </div>\r\n              <div>\r\n                ${node && node.data && node.data.picked.data.price}\r\n              </div>\r\n            </div>\r\n          ] : (\r\n            <div>Collecting Info...</div>\r\n          )}\r\n    </NodeWrapper>\r\n  );\r\n}\r\n\r\nexport const node = withEditor(CollectorNode)\r\n","export const mapStatus = (links, nodes) => {\r\n    nodes = nodes.slice()\r\n    for(var i = 0; i < nodes.length; i++){\r\n      let node = nodes[i];\r\n      let _links = links.filter((a) => a.source == node.id);\r\n\r\n      let linkStatus = _links.map((x) => {\r\n        return nodes.filter((b) => b.id == x.target)[0].data.status || \"UNFINISHED\";\r\n      })\r\n\r\n      if(linkStatus.filter((a) => a != 'COMPLETE').length > 0){\r\n\r\n        _links.map((x, ix) => {\r\n          let lix = links.map((x) => x.id).indexOf(x.id)\r\n          links[lix].animated = linkStatus[ix] == \"UNFINISHED\";\r\n        })\r\n        nodes[i].data.status = 'BLOCKED'\r\n        nodes[i].style = {background: 'red'}\r\n      }else if(linkStatus.filter((a) => a != 'COMPLETE').length == 0 && node.data.status != 'COMPLETE'){\r\n        _links.map((x, ix) => {\r\n          let lix = links.map((x) => x.id).indexOf(x.id)\r\n          links[lix].animated = linkStatus[ix] == \"UNFINISHED\";\r\n        })\r\n        nodes[i].data.status = 'UNFINISHED'\r\n        nodes[i].style = {background: 'orange'}\r\n      }else{\r\n        nodes[i].style = {background: 'green'}\r\n      }\r\n      nodes[i].style = {\r\n        ...nodes[i].style,\r\n        borderRadius: 7\r\n      }\r\n    }\r\n    return links.slice().concat(nodes)\r\n}\r\n","import React from 'react'\r\nimport ReactFlow, {\r\n  removeElements,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background\r\n} from '@thetechcompany/react-flow-renderer';\r\n\r\nimport { EditorContext } from './context';\r\n\r\n//Controls\r\nimport ControlHeader from './components/control-header';\r\nimport ControlModal from './components/control-modal';\r\n\r\n//Node Declaration\r\nimport * as BaseNode from './components/base-node';\r\nimport * as PickerNode from './components/picker-node';\r\nimport * as ProductNode from './components/product-node';\r\nimport * as CollectorNode from './components/collector-node';\r\n\r\nimport { mapStatus } from './style';\r\nimport styles from './styles.module.css'\r\n\r\nconst uuid = require('uuid')\r\n\r\nconst onLoad = (reactFlowInst) => {\r\n  console.debug('=> React Flow loaded')\r\n  reactFlowInst.fitView();\r\n}\r\n\r\nexport default function HiveEditor(props) {\r\n\r\n  const [ exploring, setExploring ] = React.useState(null)\r\n\r\n  const updateNode = (id, node_func) => {\r\n    let n = props.nodes.slice()\r\n    let ix = n.map((x) => x.id).indexOf(id) \r\n    if(ix > -1){\r\n      n[ix] = node_func(n[ix])\r\n      _setNodes(n)\r\n    }\r\n  }\r\n\r\n  const _setNodes = (nodes) => {\r\n    if(props.onNodeChange){\r\n      props.onNodeChange(nodes)\r\n    }\r\n  }\r\n\r\n  const _setLinks = (links) => {\r\n    if(props.onLinkChange){\r\n      props.onLinkChange(links)\r\n    }\r\n  }\r\n\r\n  const addChild = (parent_id) => {\r\n    let parent_node = props.nodes.filter((a) => a.id == parent_id)\r\n    if(parent_node && parent_node.length > 0){\r\n      let newPos = {\r\n        x: parent_node[0].position.x,\r\n        y: parent_node[0].position.y + 100\r\n      }\r\n\r\n      let node = addNode('baseNode', newPos)\r\n      let link = addLink(parent_id, node.id)\r\n    }\r\n  }\r\n \r\n  const addLink = (parent, target) => {\r\n    let link = {\r\n      id: uuid.v4(),\r\n      source: parent,\r\n      target: target\r\n    }\r\n    _setLinks(props.links.concat([link]))\r\n    return link\r\n  }\r\n\r\n\r\n  const addNode = (type, position) => {\r\n        let id = uuid.v4()\r\n        let node = {\r\n          type: type || 'baseNode',\r\n          id: id,\r\n          position: position,\r\n          data: {\r\n            label: \"\"\r\n          }\r\n        }\r\n        let n = props.nodes.slice();\r\n        n.push(node)\r\n        _setNodes(n)\r\n        \r\n        return node;\r\n  }\r\n\r\n  const onElementsRemove = (elementsToRemove) => {\r\n    let _nodes = elementsToRemove.filter((a) => a.source == null)\r\n    let _links = elementsToRemove.filter((a) => a.source != null)\r\n    _nodes = props.nodes.filter((a) => _nodes.map((x) => x.id).indexOf(a.id) < 0);\r\n    _links = props.links.filter((a) => _links.map((x) => x.id).indexOf(a.id) < 0)\r\n    _setNodes(_nodes)\r\n    _setLinks(_links)\r\n  }\r\n\r\n  const onConnect = (params) => {\r\n    addLink(params.source, params.target)\r\n  }\r\n\r\n  const onNodeDrag = (event, node) => {\r\n    updateNode(node.id, (_node) => {\r\n      _node.position = node.position\r\n      return _node\r\n    })\r\n  }\r\n\r\n  const joinNode = (node_id) => {\r\n    if(props.onJoinNode){\r\n      props.onJoinNode((user) => {\r\n        updateNode(node_id, (node) => {\r\n          if(!node.members) node.members = []\r\n          if(node.members && !node.members.indexOf(user) > -1)node.members.push(user)\r\n          return node;\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const exploreNode = (node_id) => {\r\n    let node = props.nodes.filter((a) => a.id == node_id)[0]\r\n    console.debug('=> Explore Node', node)\r\n    setExploring(node)\r\n  }\r\n\r\n  let editor = {\r\n      nodes: props.nodes,\r\n      links: props.links,\r\n      exploring: exploring,\r\n      exploreNode: exploreNode,\r\n      nodeTypes: props.nodeTypes,\r\n      updateNode: updateNode,\r\n      joinNode: joinNode,\r\n      addNode: addNode,\r\n      addLink: addLink,\r\n      addChild: addChild\r\n  }\r\n  return (\r\n    <EditorContext.Provider value={editor}>\r\n      <ControlHeader />\r\n      <ReactFlow\r\n        elements={mapStatus(props.links, props.nodes)}\r\n        nodeTypes={{\r\n          baseNode: BaseNode.node,\r\n          productNode: ProductNode.node,\r\n          pickerNode: PickerNode.node,\r\n          collectorNode: CollectorNode.node,\r\n          ...(props.nodeTypes || []).map((x) => x.node)\r\n        }}\r\n        onLoad={onLoad}\r\n        onNodeDragStart={onNodeDrag}\r\n        onNodeDragStop={onNodeDrag}\r\n        onNodeDrag={onNodeDrag}\r\n        onElementsRemove={onElementsRemove}\r\n        onConnect={onConnect}\r\n        snapToGrid={props.snapToGrid || true}\r\n        snapGrid={[15, 15]}>\r\n        <MiniMap\r\n          nodeStrokeColor={(n) => {\r\n            if (n.style?.background) return n.style.background;\r\n            if (n.type === 'input') return '#0041d0';\r\n            if (n.type === 'output') return '#ff0072';\r\n            if (n.type === 'default') return '#1a192b';\r\n            return '#eee';\r\n          }}\r\n          nodeColor={(n) => {\r\n            if(n.style?.background) return n.style.background;\r\n            return '#fff';\r\n          }}\r\n          nodeBorderRadius={2} />\r\n        <Controls />\r\n        <Background color=\"#aaa\" gap={16} />\r\n      </ReactFlow>\r\n      <ControlModal \r\n        onClose={() => setExploring(null)}\r\n        open={exploring != null} \r\n        selected={exploring}>\r\n        {(node) => \r\n        exploring != null && (\r\n          props.nodeTypes || []\r\n        ).concat([BaseNode, ProductNode, PickerNode, CollectorNode])\r\n        .filter((a) => exploring.type == a.type)\r\n          .map((X) => props.modalBody ? props.modalBody(X, exploring, editor) : <X.modal node={exploring} />)[0]\r\n        }\r\n    </ControlModal>\r\n  </EditorContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport HiveEditor from 'react-hive-flow'\r\nimport 'react-hive-flow/dist/index.css'\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n  let [ nodes, setNodes ] = React.useState([])\r\n  let [ links, setLinks ] = React.useState([])\r\n\r\n  return <HiveEditor \r\n      nodes={nodes}\r\n    links={links}\r\n    modalBody={(NodeType, node, editor) => {\r\n      return (\r\n      <div className=\"hive-modal\">\r\n        <NodeType.modal node={node} />\r\n        <div>\r\n          <div>Join</div>\r\n        </div>\r\n      </div>)\r\n    }}\r\n      onNodeChange={(nodes) => setNodes(nodes)}\r\n      onLinkChange={(links) => setLinks(links)}\r\n    />\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}